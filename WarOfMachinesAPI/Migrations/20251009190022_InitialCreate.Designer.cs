// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WarOfMachines.Data;

#nullable disable

namespace WarOfMachines.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251009190022_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WarOfMachines.Models.Faction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Factions");
                });

            modelBuilder.Entity("WarOfMachines.Models.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("WarOfMachines.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("EndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Map")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("WarOfMachines.Models.MatchParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<int>("Kills")
                        .HasColumnType("integer");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer");

                    b.Property<int>("MmrDelta")
                        .HasColumnType("integer");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Team")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer");

                    b.Property<int>("XpEarned")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("MatchParticipants");
                });

            modelBuilder.Entity("WarOfMachines.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Adamant")
                        .HasColumnType("integer");

                    b.Property<int>("Bolts")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FreeXp")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<int>("Mmr")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("WarOfMachines.Models.UserVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer");

                    b.Property<int>("Xp")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("VehicleId");

                    b.HasIndex("UserId", "IsActive")
                        .IsUnique()
                        .HasFilter("\"IsActive\" = TRUE");

                    b.HasIndex("UserId", "VehicleId")
                        .IsUnique();

                    b.ToTable("UserVehicles");
                });

            modelBuilder.Entity("WarOfMachines.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Acceleration")
                        .HasColumnType("real");

                    b.Property<float>("Accuracy")
                        .HasColumnType("real");

                    b.Property<float>("AimTime")
                        .HasColumnType("real");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Class")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<int>("FactionId")
                        .HasColumnType("integer");

                    b.Property<int>("HP")
                        .HasColumnType("integer");

                    b.Property<int>("HullArmorFront")
                        .HasColumnType("integer");

                    b.Property<int>("HullArmorRear")
                        .HasColumnType("integer");

                    b.Property<int>("HullArmorSide")
                        .HasColumnType("integer");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("boolean");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Penetration")
                        .HasColumnType("integer");

                    b.Property<int>("PurchaseCost")
                        .HasColumnType("integer");

                    b.Property<float>("ReloadTime")
                        .HasColumnType("real");

                    b.Property<float>("Speed")
                        .HasColumnType("real");

                    b.Property<float>("TraverseSpeed")
                        .HasColumnType("real");

                    b.Property<int>("TurretArmorFront")
                        .HasColumnType("integer");

                    b.Property<int>("TurretArmorRear")
                        .HasColumnType("integer");

                    b.Property<int>("TurretArmorSide")
                        .HasColumnType("integer");

                    b.Property<float>("TurretTraverseSpeed")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("FactionId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("WarOfMachines.Models.VehicleResearchRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PredecessorVehicleId")
                        .HasColumnType("integer");

                    b.Property<int>("RequiredXpOnPredecessor")
                        .HasColumnType("integer");

                    b.Property<int>("SuccessorVehicleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SuccessorVehicleId");

                    b.HasIndex("PredecessorVehicleId", "SuccessorVehicleId")
                        .IsUnique();

                    b.ToTable("VehicleResearchRequirements");
                });

            modelBuilder.Entity("WarOfMachines.Models.MatchParticipant", b =>
                {
                    b.HasOne("WarOfMachines.Models.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarOfMachines.Models.Player", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarOfMachines.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("WarOfMachines.Models.UserVehicle", b =>
                {
                    b.HasOne("WarOfMachines.Models.Player", null)
                        .WithMany("UserVehicles")
                        .HasForeignKey("PlayerId");

                    b.HasOne("WarOfMachines.Models.Player", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarOfMachines.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("WarOfMachines.Models.Vehicle", b =>
                {
                    b.HasOne("WarOfMachines.Models.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("WarOfMachines.Models.VehicleResearchRequirement", b =>
                {
                    b.HasOne("WarOfMachines.Models.Vehicle", "Predecessor")
                        .WithMany()
                        .HasForeignKey("PredecessorVehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WarOfMachines.Models.Vehicle", "Successor")
                        .WithMany("ResearchFrom")
                        .HasForeignKey("SuccessorVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predecessor");

                    b.Navigation("Successor");
                });

            modelBuilder.Entity("WarOfMachines.Models.Player", b =>
                {
                    b.Navigation("UserVehicles");
                });

            modelBuilder.Entity("WarOfMachines.Models.Vehicle", b =>
                {
                    b.Navigation("ResearchFrom");
                });
#pragma warning restore 612, 618
        }
    }
}
